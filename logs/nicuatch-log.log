[DEBUG] 2021-10-20 15:57:40.974 [main] ReportDao - The list of users [TestResult [doctor=doctor, notes=I said its fine!, reference=1, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=2, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=3, result=Its Fine, test=Leg SStuff]]
[DEBUG] 2021-10-20 15:57:40.984 [main] ReportDaoTest - this test is fine.
[DEBUG] 2021-10-20 23:07:04.143 [main] ReportDao - The list of users [TestResult [doctor=doctor, notes=I said its fine!, reference=1, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=2, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=3, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=4, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=5, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=6, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=7, result=Its Fine, test=Leg SStuff]]
[ERROR] 2021-10-20 23:32:39.487 [main] DB - SQL Exceptionjava.sql.SQLException: The server time zone value 'EDT' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
[ERROR] 2021-10-20 23:32:39.646 [main] DB - SQL Exceptionjava.sql.SQLException: The server time zone value 'EDT' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
[ERROR] 2021-10-20 23:32:39.676 [main] DB - SQL Exceptionjava.sql.SQLException: The server time zone value 'EDT' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
[DEBUG] 2021-10-20 23:32:39.812 [main] ReportDao - The list of users [TestResult [doctor=doctor, notes=I said its fine!, reference=1, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=2, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=3, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=4, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=5, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=6, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=7, result=Its Fine, test=Leg SStuff]]
[ERROR] 2021-10-20 23:32:39.864 [main] DB - SQL Exceptionjava.sql.SQLException: The server time zone value 'EDT' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
[DEBUG] 2021-10-20 23:32:39.913 [main] ReportDao - The list of users [TestResult [doctor=doctor, notes=I said its fine!, reference=1, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=2, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=3, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=4, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=5, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=6, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=7, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=8, result=Its Fine, test=Leg SStuff]]
[ERROR] 2021-10-20 23:32:39.964 [main] DB - SQL Exceptionjava.sql.SQLException: The server time zone value 'EDT' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
[DEBUG] 2021-10-20 23:37:56.952 [main] ReportDao - The list of users [TestResult [doctor=doctor, notes=I said its fine!, reference=15, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=16, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=17, result=Its Fine, test=Leg SStuff]]
[DEBUG] 2021-10-20 23:37:56.956 [main] ReportDaoTest - this test returns something.
[DEBUG] 2021-10-20 23:37:57.107 [main] ReportDao - The list of users [TestResult [doctor=doctor, notes=I said its fine!, reference=18, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=19, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=20, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=21, result=Its Fine, test=Leg SStuff]]
[ERROR] 2021-10-20 23:49:22.745 [main] DB - SQL Exceptionjava.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* from reports' at line 1
[ERROR] 2021-10-20 23:49:22.890 [main] DB - SQL Exceptionjava.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* from reports' at line 1
[ERROR] 2021-10-20 23:49:22.929 [main] DB - SQL Exceptionjava.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* from reports' at line 1
[DEBUG] 2021-10-20 23:49:23.088 [main] ReportDao - The list of users [TestResult [doctor=doctor, notes=I said its fine!, reference=22, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=23, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=24, result=Its Fine, test=Leg SStuff]]
[DEBUG] 2021-10-20 23:49:23.091 [main] ReportDaoTest - this test returns something.
[ERROR] 2021-10-20 23:49:23.142 [main] DB - SQL Exceptionjava.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* from reports' at line 1
[DEBUG] 2021-10-20 23:49:23.182 [main] ReportDao - The list of users [TestResult [doctor=doctor, notes=I said its fine!, reference=22, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=23, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=24, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=25, result=Its Fine, test=Leg SStuff]]
[ERROR] 2021-10-20 23:49:23.232 [main] DB - SQL Exceptionjava.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* from reports' at line 1
[DEBUG] 2021-10-20 23:50:15.702 [main] ReportDao - The list of users [TestResult [doctor=Jon, notes=Not a problem to be worried about., reference=1, result=Positive, test=Lung Infection], TestResult [doctor=Wallis, notes=Further testing needs to be done next week., reference=2, result=Its Fine, test=Memory], TestResult [doctor=doctor, notes=I said its fine!, reference=3, result=Its Fine, test=Leg SStuff]]
[DEBUG] 2021-10-20 23:50:15.705 [main] ReportDaoTest - this test returns something.
[DEBUG] 2021-10-20 23:50:15.804 [main] ReportDao - The list of users [TestResult [doctor=Jon, notes=Not a problem to be worried about., reference=1, result=Positive, test=Lung Infection], TestResult [doctor=Wallis, notes=Further testing needs to be done next week., reference=2, result=Its Fine, test=Memory], TestResult [doctor=doctor, notes=I said its fine!, reference=3, result=Its Fine, test=Leg SStuff], TestResult [doctor=doctor, notes=I said its fine!, reference=4, result=Its Fine, test=Leg SStuff]]
[DEBUG] 2021-10-20 23:56:48.236 [main] ReportDao - The list of users [TestResult [doctor=Jon, notes=Not a problem to be worried about., reference=1, result=Positive, test=Lung Infection], TestResult [doctor=Wallis, notes=Further testing needs to be done next week., reference=2, result=Its Fine, test=Memory], TestResult [doctor=doctor, notes=I said its fine!, reference=3, result=Its Fine, test=Leg SStuff], TestResult [doctor=Chris, notes=I said its fine!, reference=4, result=It's Fine, test=Luchemia]]
[DEBUG] 2021-10-21 04:48:56.119 [main] ReportDao - The list of users [Report [docId=bWallis, notes=Not a problem to be worried about., patientId=jDoe, reference=1, result=Positive, test=Lung Infection], Report [docId=bWallis, notes=Further testing needs to be done next week., patientId=jDoe, reference=2, result=Its Fine, test=Memory], Report [docId=mWilliams, notes=I said its fine!, patientId=jDoe, reference=3, result=Its Fine, test=Leg SStuff]]
[DEBUG] 2021-10-21 04:48:56.121 [main] ReportDaoTest - this test returns something.
[DEBUG] 2021-10-21 04:50:18.090 [main] ReportDao - The list of users [Report [docId=bWallis, notes=Not a problem to be worried about., patientId=jDoe, reference=1, result=Positive, test=Lung Infection], Report [docId=bWallis, notes=Further testing needs to be done next week., patientId=jDoe, reference=2, result=Its Fine, test=Memory], Report [docId=mWilliams, notes=I said its fine!, patientId=jDoe, reference=3, result=Its Fine, test=Leg SStuff], Report [docId=jMadden, notes=I said its fine!, patientId=jDoe, reference=4, result=It's Fine, test=Luchemia]]
[DEBUG] 2021-10-21 15:17:58.143 [main] ReportDao - The list of users [Report [docId=bWallis, notes=Not a problem to be worried about., patientId=jDoe, reference=1, result=Positive, test=Lung Infection], Report [docId=bWallis, notes=Further testing needs to be done next week., patientId=jDoe, reference=2, result=Its Fine, test=Memory], Report [docId=mWilliams, notes=I said its fine!, patientId=jDoe, reference=3, result=Its Fine, test=Leg SStuff]]
[DEBUG] 2021-10-21 15:17:58.146 [main] ReportDaoTest - this test returns something.
[DEBUG] 2021-10-21 15:17:58.224 [main] ReportDao - The list of users [Report [docId=bWallis, notes=Not a problem to be worried about., patientId=jDoe, reference=1, result=Positive, test=Lung Infection], Report [docId=bWallis, notes=Further testing needs to be done next week., patientId=jDoe, reference=2, result=Its Fine, test=Memory], Report [docId=mWilliams, notes=I said its fine!, patientId=jDoe, reference=3, result=Its Fine, test=Leg SStuff], Report [docId=jMadden, notes=I said its fine!, patientId=jDoe, reference=4, result=It's Fine, test=Luchemia]]
[DEBUG] 2021-10-21 15:18:10.981 [main] ReportDao - The list of users [Report [docId=bWallis, notes=Not a problem to be worried about., patientId=jDoe, reference=1, result=Positive, test=Lung Infection], Report [docId=bWallis, notes=Further testing needs to be done next week., patientId=jDoe, reference=2, result=Its Fine, test=Memory], Report [docId=mWilliams, notes=I said its fine!, patientId=jDoe, reference=3, result=Its Fine, test=Leg SStuff]]
[DEBUG] 2021-10-21 15:18:10.982 [main] ReportDaoTest - this test returns something.
[DEBUG] 2021-10-21 15:18:11.064 [main] ReportDao - The list of users [Report [docId=bWallis, notes=Not a problem to be worried about., patientId=jDoe, reference=1, result=Positive, test=Lung Infection], Report [docId=bWallis, notes=Further testing needs to be done next week., patientId=jDoe, reference=2, result=Its Fine, test=Memory], Report [docId=mWilliams, notes=I said its fine!, patientId=jDoe, reference=3, result=Its Fine, test=Leg SStuff], Report [docId=jMadden, notes=I said its fine!, patientId=jDoe, reference=4, result=It's Fine, test=Luchemia]]
[DEBUG] 2021-10-21 15:35:44.342 [main] ReportDao - The list of users [Report [docId=bWallis, notes=Not a problem to be worried about., patientId=jDoe, reference=1, result=Positive, test=Lung Infection], Report [docId=bWallis, notes=Further testing needs to be done next week., patientId=jDoe, reference=2, result=Its Fine, test=Memory], Report [docId=mWilliams, notes=I said its fine!, patientId=jDoe, reference=3, result=Its Fine, test=Leg SStuff]]
[DEBUG] 2021-10-21 15:35:44.346 [main] ReportDaoTest - this test returns something.
[DEBUG] 2021-10-21 15:35:44.423 [main] ReportDao - The list of users [Report [docId=bWallis, notes=Not a problem to be worried about., patientId=jDoe, reference=1, result=Positive, test=Lung Infection], Report [docId=bWallis, notes=Further testing needs to be done next week., patientId=jDoe, reference=2, result=Its Fine, test=Memory], Report [docId=mWilliams, notes=I said its fine!, patientId=jDoe, reference=3, result=Its Fine, test=Leg SStuff], Report [docId=jMadden, notes=I said its fine!, patientId=jDoe, reference=4, result=It's Fine, test=Luchemia]]
[DEBUG] 2021-10-21 15:36:34.990 [main] ReportDao - The list of users [Report [docId=bWallis, notes=Not a problem to be worried about., patientId=jDoe, reference=1, result=Positive, test=Lung Infection], Report [docId=bWallis, notes=Further testing needs to be done next week., patientId=jDoe, reference=2, result=Its Fine, test=Memory], Report [docId=mWilliams, notes=I said its fine!, patientId=jDoe, reference=3, result=Its Fine, test=Leg SStuff]]
[DEBUG] 2021-10-21 15:36:34.993 [main] ReportDaoTest - this test returns something.
[DEBUG] 2021-10-21 15:36:35.071 [main] ReportDao - The list of users [Report [docId=bWallis, notes=Not a problem to be worried about., patientId=jDoe, reference=1, result=Positive, test=Lung Infection], Report [docId=bWallis, notes=Further testing needs to be done next week., patientId=jDoe, reference=2, result=Its Fine, test=Memory], Report [docId=mWilliams, notes=I said its fine!, patientId=jDoe, reference=3, result=Its Fine, test=Leg SStuff], Report [docId=jMadden, notes=I said its fine!, patientId=jDoe, reference=4, result=It's Fine, test=Luchemia]]
[DEBUG] 2021-10-22 02:07:52.038 [main] DoctorDao - The list of users [Doctor [birthDate=3, firstname=Brad, lastname=Wallis, docId=bWallis], Doctor [birthDate=7, firstname=John, lastname=Madden, docId=jMadden], Doctor [birthDate=25, firstname=Mary, lastname=Williams, docId=mWilliams]]
[ERROR] 2021-10-22 02:19:25.700 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctors_docId_fk` FOREIGN KEY (`docId`) REFERENCES `doctors` (`docId`))
[ERROR] 2021-10-22 02:21:19.112 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctors_docId_fk` FOREIGN KEY (`docId`) REFERENCES `doctors` (`docId`))
[DEBUG] 2021-10-22 02:21:19.295 [main] DoctorDao - The list of users []
[ERROR] 2021-10-22 02:26:02.015 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctors_docId_fk` FOREIGN KEY (`docId`) REFERENCES `doctors` (`docId`))
[DEBUG] 2021-10-22 02:26:02.195 [main] DoctorDao - The list of users []
[ERROR] 2021-10-22 02:30:04.385 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctors_docId_fk` FOREIGN KEY (`docId`) REFERENCES `doctors` (`docId`))
[DEBUG] 2021-10-22 02:30:04.568 [main] DoctorDao - The list of users []
[DEBUG] 2021-10-22 02:32:04.122 [main] DoctorDao - The list of users [Doctor [birthDate=3, firstname=Brad, lastname=Wallis, docId=bWallis], Doctor [birthDate=7, firstname=John, lastname=Madden, docId=jMadden], Doctor [birthDate=25, firstname=Mary, lastname=Williams, docId=mWilliams]]
[DEBUG] 2021-10-22 02:32:04.133 [main] DoctorDaoTest - testGetAll returns: [Doctor [birthDate=3, firstname=Brad, lastname=Wallis, docId=bWallis], Doctor [birthDate=7, firstname=John, lastname=Madden, docId=jMadden], Doctor [birthDate=25, firstname=Mary, lastname=Williams, docId=mWilliams]]
[ERROR] 2021-10-22 02:33:01.370 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctors_docId_fk` FOREIGN KEY (`docId`) REFERENCES `doctors` (`docId`))
[ERROR] 2021-10-22 02:34:32.098 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctors_docId_fk` FOREIGN KEY (`docId`) REFERENCES `doctors` (`docId`))
[ERROR] 2021-11-01 15:19:15.025 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[DEBUG] 2021-11-01 15:19:15.283 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='jDoe'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='jDoe'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='jDoe'}, Report{reference=5, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='jDoe'}]
[ERROR] 2021-11-01 15:25:12.546 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 15:26:11.671 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[DEBUG] 2021-11-01 15:26:11.904 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='jDoe'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='jDoe'}, Report{reference=5, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='jDoe'}]
[DEBUG] 2021-11-01 15:26:11.908 [main] ReportDaoTest - This test should return the full size of the test Report table.
[ERROR] 2021-11-01 15:44:44.579 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 17:21:30.817 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 17:29:29.498 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 17:31:35.466 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 17:36:58.382 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 17:47:41.407 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 17:55:28.901 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[DEBUG] 2021-11-01 17:55:29.144 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Doctor{, firstname='Jon', lastname='Doe', bday=2021-08-06}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Doctor{, firstname='Jon', lastname='Doe', bday=2021-08-06}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Doctor{, firstname='Jon', lastname='Doe', bday=2021-08-06}'}]
[DEBUG] 2021-11-01 17:55:29.151 [main] ReportDaoTest - This test should return the full size of the test Report table.
[ERROR] 2021-11-01 17:57:05.011 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[DEBUG] 2021-11-01 17:57:05.263 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Doctor{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{, firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Doctor{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{, firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Doctor{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{, firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-01 17:57:05.269 [main] ReportDaoTest - This test should return the full size of the test Report table.
[ERROR] 2021-11-01 17:57:21.402 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 17:58:26.238 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 18:43:30.690 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 19:03:14.159 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[DEBUG] 2021-11-01 19:03:14.284 [main] ReportDaoTest - Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}
[ERROR] 2021-11-01 19:05:39.121 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[DEBUG] 2021-11-01 19:05:39.255 [main] ReportDaoTest - Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}
[DEBUG] 2021-11-01 19:05:39.257 [main] ReportDaoTest - Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}
[ERROR] 2021-11-01 19:09:12.200 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[DEBUG] 2021-11-01 19:09:12.343 [main] ReportDaoTest - Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}
[DEBUG] 2021-11-01 19:09:12.345 [main] ReportDaoTest - Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}
[ERROR] 2021-11-01 19:12:50.343 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 19:31:43.242 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[DEBUG] 2021-11-01 19:31:43.462 [main] ReportDao - The list of users [Report{reference=1, test='Eye', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-01 19:31:43.564 [main] ReportDao - The list of users [Report{reference=1, test='Eye', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}, Report{reference=4, test='Leukemia', result='its fine', notes='its fine', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}]
[ERROR] 2021-11-01 19:34:16.254 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[DEBUG] 2021-11-01 19:34:16.505 [main] ReportDao - The list of users [Report{reference=1, test='Eye', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}, Report{reference=4, test='Leukemia', result='its fine', notes='its fine', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}]
[DEBUG] 2021-11-01 19:34:16.579 [main] ReportDao - The list of users [Report{reference=1, test='Eye', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}, Report{reference=4, test='Leukemia', result='its fine', notes='its fine', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=5, test='Leukemia', result='its fine', notes='its fine', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}]
[ERROR] 2021-11-01 19:34:16.691 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 19:34:16.814 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 19:34:16.860 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[DEBUG] 2021-11-01 19:34:16.887 [main] ReportDao - The list of users [Report{reference=1, test='Eye', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}, Report{reference=4, test='Leukemia', result='its fine', notes='its fine', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=5, test='Leukemia', result='its fine', notes='its fine', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}]
[ERROR] 2021-11-01 19:34:16.937 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[ERROR] 2021-11-01 19:36:07.419 [main] DB - SQL Exceptionjava.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`nicuwatchtest`.`reports`, CONSTRAINT `reports_Doctor_id_fk` FOREIGN KEY (`docId`) REFERENCES `doctor` (`docId_id`))
[DEBUG] 2021-11-01 19:56:27.132 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-01 19:56:27.252 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}, Report{reference=4, test='Leukemia', result='its fine', notes='its fine', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}]
[DEBUG] 2021-11-01 19:56:27.570 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-01 19:56:27.571 [main] ReportDaoTest - This test should return the full size of the test Report table.
[DEBUG] 2021-11-02 02:12:30.847 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-02 02:12:30.934 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}, Report{reference=4, test='Leukemia', result='its fine', notes='its fine', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}]
[DEBUG] 2021-11-02 02:12:31.235 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-02 02:12:31.235 [main] ReportDaoTest - This test should return the full size of the test Report table.
[DEBUG] 2021-11-02 02:12:48.870 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-02 02:12:48.956 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}, Report{reference=4, test='Leukemia', result='its fine', notes='its fine', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}]
[DEBUG] 2021-11-02 02:12:49.332 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-02 02:12:49.333 [main] ReportDaoTest - This test should return the full size of the test Report table.
[DEBUG] 2021-11-02 02:36:52.231 [main] ReportDao - The list of reports associated to the doctor: 
[DEBUG] 2021-11-02 02:37:46.571 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-02 02:37:46.648 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}, Report{reference=4, test='Leukemia', result='its fine', notes='its fine', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}]
[DEBUG] 2021-11-02 02:37:46.726 [main] ReportDao - The list of reports associated to the doctor: 
[DEBUG] 2021-11-02 02:37:47.171 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-02 02:37:47.172 [main] ReportDaoTest - This test should return the full size of the test Report table.
[DEBUG] 2021-11-02 10:41:47.179 [main] DoctorDao - The list of users [Doctor{firstname='Brad', lastname='Wallis', tenure=3}, Doctor{firstname='John', lastname='Madden', tenure=7}, Doctor{firstname='Mary', lastname='Williams', tenure=25}]
[DEBUG] 2021-11-02 10:41:47.186 [main] DoctorDaoTest - testGetAllDoctors returns: [Doctor{firstname='Brad', lastname='Wallis', tenure=3}, Doctor{firstname='John', lastname='Madden', tenure=7}, Doctor{firstname='Mary', lastname='Williams', tenure=25}]
[DEBUG] 2021-11-02 12:42:31.467 [main] DoctorDao - The list of users [Doctor{firstname='Brad', lastname='Wallis', tenure=3}, Doctor{firstname='John', lastname='Madden', tenure=7}, Doctor{firstname='Mary', lastname='Williams', tenure=25}, Doctor{firstname='New', lastname='Doctor', tenure=121}]
[DEBUG] 2021-11-02 13:16:19.109 [main] DoctorDao - The list of users [Doctor{firstname='Brad', lastname='Wallis', tenure=3}, Doctor{firstname='John', lastname='Madden', tenure=7}, Doctor{firstname='Mary', lastname='Williams', tenure=25}]
[DEBUG] 2021-11-02 13:16:19.117 [main] DoctorDaoTest - testGetAllDoctors returns: [Doctor{firstname='Brad', lastname='Wallis', tenure=3}, Doctor{firstname='John', lastname='Madden', tenure=7}, Doctor{firstname='Mary', lastname='Williams', tenure=25}]
[DEBUG] 2021-11-02 13:16:19.454 [main] DoctorDao - The list of users [Doctor{firstname='Brad', lastname='Wallis', tenure=3}, Doctor{firstname='John', lastname='Madden', tenure=7}, Doctor{firstname='Mary', lastname='Williams', tenure=25}, Doctor{firstname='New', lastname='Doctor', tenure=121}]
[DEBUG] 2021-11-02 14:58:27.366 [main] PatientDao - The list of users [Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}]
[DEBUG] 2021-11-02 14:58:27.374 [main] PatientDaoTest - testGetAllDoctors returns: [Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}]
[DEBUG] 2021-11-02 14:58:27.723 [main] PatientDao - The list of users [Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}, Patient{, firstname='New', lastname='Patient', bday=1995-08-20}]
[DEBUG] 2021-11-02 18:12:12.191 [main] PatientDao - The list of users [Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}]
[DEBUG] 2021-11-02 18:12:12.200 [main] PatientDaoTest - testGetAllDoctors returns: [Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}]
[DEBUG] 2021-11-02 18:12:12.479 [main] PatientDao - The list of users [Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}, Patient{, firstname='New', lastname='Patient', bday=1995-08-20}]
[DEBUG] 2021-11-04 16:13:58.221 [main] DoctorDao - The list of users [Doctor{firstname='Brad', lastname='Wallis', tenure=3}, Doctor{firstname='John', lastname='Madden', tenure=7}, Doctor{firstname='Mary', lastname='Williams', tenure=25}]
[DEBUG] 2021-11-04 16:13:58.228 [main] DoctorDaoTest - testGetAllDoctors returns: [Doctor{firstname='Brad', lastname='Wallis', tenure=3}, Doctor{firstname='John', lastname='Madden', tenure=7}, Doctor{firstname='Mary', lastname='Williams', tenure=25}]
[DEBUG] 2021-11-04 16:13:58.571 [main] DoctorDao - The list of users [Doctor{firstname='Brad', lastname='Wallis', tenure=3}, Doctor{firstname='John', lastname='Madden', tenure=7}, Doctor{firstname='Mary', lastname='Williams', tenure=25}, Doctor{firstname='New', lastname='Doctor', tenure=121}]
[DEBUG] 2021-11-04 16:14:15.347 [main] PatientDao - The list of users [Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}]
[DEBUG] 2021-11-04 16:14:15.354 [main] PatientDaoTest - testGetAllDoctors returns: [Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}]
[DEBUG] 2021-11-04 16:14:15.600 [main] PatientDao - The list of users [Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}, Patient{, firstname='New', lastname='Patient', bday=1995-08-20}]
[DEBUG] 2021-11-04 16:14:41.123 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-04 16:14:41.200 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}, Report{reference=4, test='Leukemia', result='its fine', notes='its fine', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}]
[DEBUG] 2021-11-04 16:14:41.281 [main] ReportDao - The list of reports associated to the doctor: 
[DEBUG] 2021-11-04 16:14:41.676 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-04 16:14:41.676 [main] ReportDaoTest - This test should return the full size of the test Report table.
[DEBUG] 2021-11-04 16:15:11.013 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-04 16:15:11.106 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}, Report{reference=4, test='Leukemia', result='its fine', notes='its fine', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}]
[DEBUG] 2021-11-04 16:15:11.185 [main] ReportDao - The list of reports associated to the doctor: 
[DEBUG] 2021-11-04 16:15:11.646 [main] ReportDao - The list of users [Report{reference=1, test='Lung Infection', result='Positive', notes='Not a problem to be worried about.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=2, test='Memory', result='Its Fine', notes='Further testing needs to be done next week.', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Brad', lastname='Wallis', tenure=3}'}, Report{reference=3, test='Leg SStuff', result='Its Fine', notes='I said its fine!', patientId='Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}', docId='Doctor{firstname='Mary', lastname='Williams', tenure=25}'}]
[DEBUG] 2021-11-04 16:15:11.647 [main] ReportDaoTest - This test should return the full size of the test Report table.
[DEBUG] 2021-11-04 16:15:11.803 [main] PatientDao - The list of users [Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}]
[DEBUG] 2021-11-04 16:15:11.803 [main] PatientDaoTest - testGetAllDoctors returns: [Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}]
[DEBUG] 2021-11-04 16:15:11.925 [main] PatientDao - The list of users [Patient{, firstname='Jon', lastname='Doe', bday=2021-08-06}, Patient{, firstname='New', lastname='Patient', bday=1995-08-20}]
[DEBUG] 2021-11-04 16:15:12.067 [main] DoctorDao - The list of users [Doctor{firstname='Brad', lastname='Wallis', tenure=3}, Doctor{firstname='John', lastname='Madden', tenure=7}, Doctor{firstname='Mary', lastname='Williams', tenure=25}]
[DEBUG] 2021-11-04 16:15:12.067 [main] DoctorDaoTest - testGetAllDoctors returns: [Doctor{firstname='Brad', lastname='Wallis', tenure=3}, Doctor{firstname='John', lastname='Madden', tenure=7}, Doctor{firstname='Mary', lastname='Williams', tenure=25}]
[DEBUG] 2021-11-04 16:15:12.179 [main] DoctorDao - The list of users [Doctor{firstname='Brad', lastname='Wallis', tenure=3}, Doctor{firstname='John', lastname='Madden', tenure=7}, Doctor{firstname='Mary', lastname='Williams', tenure=25}, Doctor{firstname='New', lastname='Doctor', tenure=121}]
[INFO ] 2021-12-05 01:57:44.383 [main] TestServiceCLient - [{"meta":{"id":"test:1","uuid":"1aca710b-874d-4c25-9a4b-0d3ee6cf6df2","sort":"160448000","src":"medical","section":"alpha","stems":["test","tests"],"offensive":false},"hom":1,"hwi":{"hw":"test","prs":[{"mw":"\u02c8test","sound":{"audio":"test0001"}}]},"fl":"noun","def":[{"sseq":[[["sense",{"sn":"1","dt":[["text","{bc}a critical examination, observation, evaluation, or trial"]],"sdsense":{"sd":"specifically","dt":[["text","{bc}the procedure of submitting a statement to such conditions or operations as will lead to its proof or disproof or to its acceptance or rejection "],["vis",[{"t":"a {wi}test{\/wi} of a statistical hypothesis"}]]]}}]],[["pseq",[["bs",{"sense":{"sn":"2","dt":[["text","{bc}a means of {a_link|testing}: as"]]}}],["sense",{"sn":"a (1)","dt":[["text","{bc}a procedure or reaction used to identify or characterize a substance or constituent "],["vis",[{"t":"a {wi}test{\/wi} for starch using iodine"}]]]}],["sense",{"sn":"(2)","dt":[["text","{bc}a reagent used in such a test"]]}]]],["sense",{"sn":"b","dt":[["text","{bc}a diagnostic procedure for determining the presence or nature of a condition or disease or for revealing a change in function"]]}],["sense",{"sn":"c","dt":[["text","{bc}something (as a series of questions or exercises) for measuring the skill, knowledge, intelligence, capacities, or aptitudes of an individual or group"]]}]],[["sense",{"sn":"3","dt":[["text","{bc}a result or value determined by testing"]]}]]]}],"shortdef":["a critical examination, observation, evaluation, or trial; specifically : the procedure of submitting a statement to such conditions or operations as will lead to its proof or disproof or to its acceptance or rejection","a means of testing: as","a procedure or reaction used to identify or characterize a substance or constituent"]},{"meta":{"id":"test:2","uuid":"5ced6884-5f01-4fe7-b9f9-28e013738b51","sort":"160449000","src":"medical","section":"alpha","stems":["test","test the water","test the waters","testabilities","testability","testable","tested","testing","tests"],"offensive":false},"hom":2,"hwi":{"hw":"test"},"fl":"transitive verb","def":[{"sseq":[[["sense",{"dt":[["text","{bc}to subject to a test"]]}]]]},{"vd":"intransitive verb","sseq":[[["sense",{"sn":"1","dt":[["text","{bc}to undergo a test"]]}]],[["sense",{"sn":"2","dt":[["text","{bc}to apply a test as a means of analysis or diagnosis "],["uns",[[["text","used with {it}for{\/it}"]]]],["vis",[{"t":"{wi}test{\/wi} for the presence of starch"}]]]}]]]}],"shortdef":["to subject to a test","to undergo a test","to apply a test as a means of analysis or diagnosis \u2014used with for"]},{"meta":{"id":"test:3","uuid":"0c54d64b-5dc5-4929-a97b-2dd521491fbe","sort":"160450000","src":"medical","section":"alpha","stems":["test"],"offensive":false},"hom":3,"hwi":{"hw":"test"},"fl":"adjective","def":[{"sseq":[[["sense",{"sn":"1","dt":[["text","{bc}of, relating to, or constituting a test "],["vis",[{"t":"the {wi}test{\/wi} environment affected the scores"}]]]}]],[["sense",{"sn":"2","dt":[["text","{bc}subjected to, used for, or revealed by {a_link|testing} "],["vis",[{"t":"{wi}test{\/wi} substances"}]]]}]]]}],"shortdef":["of, relating to, or constituting a test","subjected to, used for, or revealed by testing"]},{"meta":{"id":"test paper","uuid":"ab5d444c-44d2-4b70-95db-2c55972549b1","sort":"160463000","src":"medical","section":"alpha","stems":["test paper","test papers"],"offensive":false},"hwi":{"hw":"test paper"},"fl":"noun","def":[{"sseq":[[["sense",{"dt":[["text","{bc}paper (as litmus paper) cut usually in strips and saturated with a reagent and especially an indicator that changes color in testing for various substances"]]}]]]}],"shortdef":["paper (as litmus paper) cut usually in strips and saturated with a reagent and especially an indicator that changes color in testing for various substances"]},{"meta":{"id":"test-tube","uuid":"647ea315-8216-40de-a8c6-f5ff41784718","sort":"160464000","src":"medical","section":"alpha","stems":["test-tube"],"offensive":false},"hwi":{"hw":"test-tube"},"fl":"adjective","def":[{"sseq":[[["sense",{"sn":"1","dt":[["text","{bc}{sx|in vitro|in vitro|} "],["vis",[{"t":"{wi}test-tube{\/wi} experiments"}]]]}]],[["sense",{"sn":"2","dt":[["text","{bc}produced by in vitro fertilization "],["vis",[{"t":"{wi}test-tube{\/wi} babies"}]]]}]]]}],"shortdef":["in vitro","produced by in vitro fertilization"]},{"meta":{"id":"test tube","uuid":"e7da4c33-53f2-42a7-a1e0-2bf8e4a52915","sort":"160465000","src":"medical","section":"alpha","stems":["test tube","test tubes"],"offensive":false},"hwi":{"hw":"test tube"},"fl":"noun","def":[{"sseq":[[["sense",{"dt":[["text","{bc}a plain or lipped tube usually of thin glass closed at one end and used especially in chemistry and biology"]]}]]]}],"shortdef":["a plain or lipped tube usually of thin glass closed at one end and used especially in chemistry and biology"]},{"meta":{"id":"achievement test","uuid":"acc42a5f-88f5-44ba-bde9-fc31e2d67804","sort":"160342000","src":"medical","section":"alpha","stems":["achievement test","achievement tests"],"offensive":false},"hwi":{"hw":"achievement test"},"fl":"noun","def":[{"sseq":[[["sense",{"dt":[["text","{bc}a standardized test for measuring the skill or knowledge attained by an individual in one or more fields of work or study {dx}compare {dxt|intelligence test|intelligence test|}{\/dx}"]]}]]]}],"shortdef":["a standardized test for measuring the skill or knowledge attained by an individual in one or more fields of work or study"]},{"meta":{"id":"agglutination test","uuid":"9bdc7b49-d15a-47d2-a336-4e237b3e9d38","sort":"160977000","src":"medical","section":"alpha","stems":["agglutination test","agglutination tests"],"offensive":false},"hwi":{"hw":"agglutination test"},"fl":"noun","def":[{"sseq":[[["sense",{"dt":[["text","{bc}any of several tests based on the ability of a specific serum to cause agglutination of a suitable system and used in the diagnosis of infections, the identification of microorganisms, and in blood typing {dx}compare {dxt|widal test|widal test|}{\/dx}"]]}]]]}],"shortdef":["any of several tests based on the ability of a specific serum to cause agglutination of a suitable system and used in the diagnosis of infections, the identification of microorganisms, and in blood typing"]},{"meta":{"id":"Ames test","uuid":"c4232e1d-4f65-4174-9213-b73b4c595d9d","sort":"161538000","src":"medical","section":"alpha","stems":["Ames","Ames assay","Ames test"],"offensive":false},"hwi":{"hw":"Ames test","prs":[{"mw":"\u02c8\u0101mz-","sound":{"audio":"amest01w"}}]},"vrs":[{"vl":"also","va":"Ames assay"}],"fl":"noun","def":[{"sseq":[[["sense",{"dt":[["text","{bc}a test for identifying potential carcinogens by studying the frequency with which they cause histidine-producing genetic mutants in bacterial colonies of the genus {it}Salmonella{\/it} ({it}S. typhimurium{\/it}) initially lacking the ability to synthesize histidine "],["vis",[{"t":"The compound \u2026 produced the highest score ever reported in an {it}Ames test{\/it}, a standard measure of the cancer-causing potential of toxic chemicals.","aq":{"source":"{it}Today\u0027s Chemist at Work{\/it}","aqdate":"December 1997"}},{"t":"Dimethylnitrosamine \u2026 a known animal carcinogen\u2014is usually a potent mutagen in the {it}Ames assay{\/it}.","aq":{"source":"{it}Science News{\/it}","aqdate":"16 July 1988"}}]]]}]]]}],"bios":[[["bionw",{"biosname":"Ames"}],["bionw",{"biopname":"Bruce Nathan"}],["biodate","({it}born{\/it} 1928)"],["biotx","American biochemist. In 1976 Ames devised his test for carcinogenesis of a substance."]]],"shortdef":["a test for identifying potential carcinogens by studying the frequency with which they cause histidine-producing genetic mutants in bacterial colonies of the genus Salmonella (S. typhimurium) initially lacking the ability to synthesize histidine"]},{"meta":{"id":"aptitude test","uuid":"4b81fe1a-8557-40c3-b655-473c3d368f27","sort":"162805000","src":"medical","section":"alpha","stems":["aptitude test","aptitude tests"],"offensive":false},"hwi":{"hw":"aptitude test"},"fl":"noun","def":[{"sseq":[[["sense",{"dt":[["text","{bc}a standardized test designed to predict an individual\u0027s ability to learn certain skills {dx}compare {dxt|intelligence test|intelligence test|}{\/dx}"]]}]]]}],"shortdef":["a standardized test designed to predict an individual\u0027s ability to learn certain skills"]}]
[INFO ] 2021-12-05 03:58:52.463 [main] TestServiceCLient - [Lnicuwatch.API.MWMedical;@6fd12c5
[INFO ] 2021-12-05 04:24:45.437 [main] TestServiceCLient - [Lnicuwatch.API.MWMedical;@168cd36b
[INFO ] 2021-12-05 04:25:33.329 [main] TestServiceCLient - [Lnicuwatch.API.MWMedical;@6fd12c5
[INFO ] 2021-12-05 04:31:45.829 [main] TestServiceCLient - [Lnicuwatch.API.MWMedical;@6fd12c5
[INFO ] 2021-12-05 04:32:36.138 [main] TestServiceCLient - MWMedical{mWMedical = 'null'}
[INFO ] 2021-12-05 04:45:48.479 [main] TestServiceCLient - null
